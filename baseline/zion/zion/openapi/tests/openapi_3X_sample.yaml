openapi: 3.1.0
info:
  title: app
  description: '{{cookiecutter.app_description}}'
  version: 0.0.1
paths:
  /health_check:
    get:
      tags:
      - Health Check
      summary: Health Check
      description: Returns greeting message.
      operationId: health_check_health_check_get
      parameters:
      - name: greeting
        in: query
        required: false
        schema:
          type: string
          default: Hello
          title: Greeting
      - name: name
        in: query
        required: false
        schema:
          type: string
          default: World
          title: Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple/langsmith-eval:
    get:
      tags:
      - Langsmith Evaluation Router
      summary: Langsmith Evaluation on Agent Response
      description: Performs Langsmith Evaluation on agent
      operationId: run_langsmith_evaluation_agent_simple_langsmith_eval_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentLangsmithEvalResponse'
  /agent/simple-react/input_schema:
    get:
      tags:
      - agent/simple-react
      summary: Agent/Simple-React Input Schema
      description: Return the input schema.
      operationId: agent_simple_react_input_schema_agent_simple_react_input_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple-react/c/{config_hash}/input_schema:
    get:
      tags:
      - agent/simple-react/config
      summary: Agent/Simple-React Input Schema With Config
      description: Return the input schema.
      operationId: agent_simple_react_input_schema_with_config_agent_simple_react_c__config_hash__input_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple-react/output_schema:
    get:
      tags:
      - agent/simple-react
      summary: Agent/Simple-React Output Schema
      description: Return the output schema.
      operationId: agent_simple_react_output_schema_agent_simple_react_output_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple-react/c/{config_hash}/output_schema:
    get:
      tags:
      - agent/simple-react/config
      summary: Agent/Simple-React Output Schema With Config
      description: Return the output schema.
      operationId: agent_simple_react_output_schema_with_config_agent_simple_react_c__config_hash__output_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple-react/config_schema:
    get:
      tags:
      - agent/simple-react
      summary: Agent/Simple-React Config Schema
      description: Return the config schema.
      operationId: agent_simple_react_config_schema_agent_simple_react_config_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple-react/c/{config_hash}/config_schema:
    get:
      tags:
      - agent/simple-react/config
      summary: Agent/Simple-React Config Schema With Config
      description: Return the config schema.
      operationId: agent_simple_react_config_schema_with_config_agent_simple_react_c__config_hash__config_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple-react/token_feedback:
    post:
      summary: Create Feedback From Token
      description: Send feedback on an individual run to langsmith.
      operationId: create_feedback_from_token_agent_simple_react_token_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateRequestTokenBased'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple-react/feedback:
    post:
      summary: Create Feedback
      description: 'Send feedback on an individual run to langsmith


        Note that a successful response means that feedback was successfully

        submitted. It does not guarantee that the feedback is recorded by

        langsmith. Requests may be silently rejected if they are

        unauthenticated or invalid by the server.'
      operationId: create_feedback_agent_simple_react_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    head:
      summary: ' Check Feedback Enabled'
      description: 'Check if feedback is enabled for the runnable.


        This endpoint is private since it will be deprecated in the future.'
      operationId: _check_feedback_enabled_agent_simple_react_feedback_head
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple/input_schema:
    get:
      tags:
      - agent/simple
      summary: Agent/Simple Input Schema
      description: Return the input schema.
      operationId: agent_simple_input_schema_agent_simple_input_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple/c/{config_hash}/input_schema:
    get:
      tags:
      - agent/simple/config
      summary: Agent/Simple Input Schema With Config
      description: Return the input schema.
      operationId: agent_simple_input_schema_with_config_agent_simple_c__config_hash__input_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple/output_schema:
    get:
      tags:
      - agent/simple
      summary: Agent/Simple Output Schema
      description: Return the output schema.
      operationId: agent_simple_output_schema_agent_simple_output_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple/c/{config_hash}/output_schema:
    get:
      tags:
      - agent/simple/config
      summary: Agent/Simple Output Schema With Config
      description: Return the output schema.
      operationId: agent_simple_output_schema_with_config_agent_simple_c__config_hash__output_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple/config_schema:
    get:
      tags:
      - agent/simple
      summary: Agent/Simple Config Schema
      description: Return the config schema.
      operationId: agent_simple_config_schema_agent_simple_config_schema_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple/c/{config_hash}/config_schema:
    get:
      tags:
      - agent/simple/config
      summary: Agent/Simple Config Schema With Config
      description: Return the config schema.
      operationId: agent_simple_config_schema_with_config_agent_simple_c__config_hash__config_schema_get
      parameters:
      - name: config_hash
        in: path
        required: true
        schema:
          type: string
          title: Config Hash
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple/token_feedback:
    post:
      summary: Create Feedback From Token
      description: Send feedback on an individual run to langsmith.
      operationId: create_feedback_from_token_agent_simple_token_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateRequestTokenBased'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /agent/simple/feedback:
    post:
      summary: Create Feedback
      description: 'Send feedback on an individual run to langsmith


        Note that a successful response means that feedback was successfully

        submitted. It does not guarantee that the feedback is recorded by

        langsmith. Requests may be silently rejected if they are

        unauthenticated or invalid by the server.'
      operationId: create_feedback_agent_simple_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    head:
      summary: ' Check Feedback Enabled'
      description: 'Check if feedback is enabled for the runnable.


        This endpoint is private since it will be deprecated in the future.'
      operationId: _check_feedback_enabled_agent_simple_feedback_head
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /agent/simple-react/invoke:
    post:
      summary: Invoke the /agent/simple-react agent
      description: Invoke the /agent/simple-react agent
      tags:
      - agent/simple-react
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReActAgentInput'
      responses:
        '200':
          description: The agent response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LangGraphOutput'
  /agent/simple/invoke:
    post:
      summary: Invoke the /agent/simple agent
      description: Invoke the /agent/simple agent
      tags:
      - agent/simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleAgentInput'
      responses:
        '200':
          description: The agent response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleAgentOutput'
components:
  schemas:
    AgentLangsmithEvalResponse:
      properties:
        message:
          type: string
          title: Message
        test_run_name:
          type: string
          title: Test Run Name
      type: object
      required:
      - message
      - test_run_name
      title: AgentLangsmithEvalResponse
    Feedback:
      properties:
        run_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Run Id
        key:
          type: string
          title: Key
        score:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: 'null'
          title: Score
        value:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: string
          - type: object
          - type: 'null'
          title: Value
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        modified_at:
          type: string
          format: date-time
          title: Modified At
        correction:
          anyOf:
          - type: object
          - type: 'null'
          title: Correction
      type: object
      required:
      - run_id
      - key
      - id
      - created_at
      - modified_at
      title: Feedback
      description: Represents feedback given on an individual run
    FeedbackCreateRequest:
      properties:
        run_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Run Id
        key:
          type: string
          title: Key
        score:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: 'null'
          title: Score
        value:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: string
          - type: object
          - type: 'null'
          title: Value
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
      type: object
      required:
      - run_id
      - key
      title: FeedbackCreateRequest
      description: Represents a request that creates feedback for an individual run
    FeedbackCreateRequestTokenBased:
      properties:
        token_or_url:
          anyOf:
          - type: string
            format: uuid
          - type: string
          title: Token Or Url
        score:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: 'null'
          title: Score
        value:
          anyOf:
          - type: number
          - type: integer
          - type: boolean
          - type: string
          - type: object
          - type: 'null'
          title: Value
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        correction:
          anyOf:
          - type: object
          - type: 'null'
          title: Correction
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
      type: object
      required:
      - token_or_url
      title: FeedbackCreateRequestTokenBased
      description: Shared information between create requests of feedback and feedback
        objects.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheckResponse:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
      - message
      title: HealthCheckResponse
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    HumanMessage:
      title: HumanMessage
      description: "Message from a human.\n\nHumanMessages are messages that are passed\
        \ in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\
        \n        from langchain_core.messages import HumanMessage, SystemMessage\n\
        \n        messages = [\n            SystemMessage(\n                content=\"\
        You are a helpful assistant! Your name is Bob.\"\n            ),\n       \
        \     HumanMessage(\n                content=\"What is your name?\"\n    \
        \        )\n        ]\n\n        # Instantiate a chat model and invoke it\
        \ with the messages\n        model = ...\n        print(model.invoke(messages))"
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - type: string
          - type: array
            items:
              anyOf:
              - type: string
              - type: object
        additional_kwargs:
          title: Additional Kwargs
          type: object
        response_metadata:
          title: Response Metadata
          type: object
        type:
          title: Type
          default: human
          enum:
          - human
          type: string
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        example:
          title: Example
          default: false
          type: boolean
      required:
      - content
    ToolCall:
      title: ToolCall
      type: object
      properties:
        name:
          title: Name
          type: string
        args:
          title: Args
          type: object
        id:
          title: Id
          type: string
        type:
          title: Type
          enum:
          - tool_call
          type: string
      required:
      - name
      - args
      - id
    InvalidToolCall:
      title: InvalidToolCall
      type: object
      properties:
        name:
          title: Name
          type: string
        args:
          title: Args
          type: string
        id:
          title: Id
          type: string
        error:
          title: Error
          type: string
        type:
          title: Type
          enum:
          - invalid_tool_call
          type: string
      required:
      - name
      - args
      - id
      - error
    UsageMetadata:
      title: UsageMetadata
      type: object
      properties:
        input_tokens:
          title: Input Tokens
          type: integer
        output_tokens:
          title: Output Tokens
          type: integer
        total_tokens:
          title: Total Tokens
          type: integer
      required:
      - input_tokens
      - output_tokens
      - total_tokens
    AIMessage:
      title: AIMessage
      description: 'Message from an AI.


        AIMessage is returned from a chat model as a response to a prompt.


        This message represents the output of the model and consists of both

        the raw output as returned by the model together standardized fields

        (e.g., tool calls, usage metadata) added by the LangChain framework.'
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - type: string
          - type: array
            items:
              anyOf:
              - type: string
              - type: object
        additional_kwargs:
          title: Additional Kwargs
          type: object
        response_metadata:
          title: Response Metadata
          type: object
        type:
          title: Type
          default: ai
          enum:
          - ai
          type: string
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        example:
          title: Example
          default: false
          type: boolean
        tool_calls:
          title: Tool Calls
          default: []
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
        invalid_tool_calls:
          title: Invalid Tool Calls
          default: []
          type: array
          items:
            $ref: '#/components/schemas/InvalidToolCall'
        usage_metadata:
          $ref: '#/components/schemas/UsageMetadata'
      required:
      - content
    FunctionMessage:
      title: FunctionMessage
      description: 'Message for passing the result of executing a tool back to a model.


        FunctionMessage are an older version of the ToolMessage schema, and

        do not contain the tool_call_id field.


        The tool_call_id field is used to associate the tool call request with the

        tool call response. This is useful in situations where a chat model is able

        to request multiple tool calls in parallel.'
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - type: string
          - type: array
            items:
              anyOf:
              - type: string
              - type: object
        additional_kwargs:
          title: Additional Kwargs
          type: object
        response_metadata:
          title: Response Metadata
          type: object
        type:
          title: Type
          default: function
          enum:
          - function
          type: string
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
      required:
      - content
      - name
    BaseMessage:
      title: BaseMessage
      description: 'Base abstract message class.


        Messages are the inputs and outputs of ChatModels.'
      type: object
      properties:
        content:
          title: Content
          anyOf:
          - type: string
          - type: array
            items:
              anyOf:
              - type: string
              - type: object
        additional_kwargs:
          title: Additional Kwargs
          type: object
        response_metadata:
          title: Response Metadata
          type: object
        type:
          title: Type
          type: string
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
      required:
      - content
      - type
    ReActAgentState:
      title: ReActAgentState
      type: object
      properties:
        messages:
          title: Messages
          type: array
          items:
            $ref: '#/components/schemas/BaseMessage'
      required:
      - messages
    ReActAgentInput:
      title: ReActAgentInput
      type: object
      properties:
        messages:
          title: messages
          example:
          - type: human
            content: Sum of 1+1?
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/HumanMessage'
            - $ref: '#/components/schemas/AIMessage'
            - $ref: '#/components/schemas/FunctionMessage'
      required:
      - messages
    LangGraphOutput:
      title: LangGraphOutput
      $ref: '#/components/schemas/ReActAgentState'
    SimpleAgentInput:
      title: SimpleAgentInput
      type: object
      properties:
        input:
          title: User input
          description: User input message
          example: Weather in New York?
          type: string
        chat_history:
          title: Chat history
          example:
          - type: human
            content: Sum of 1+1?
          - type: ai
            content: '2'
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/HumanMessage'
            - $ref: '#/components/schemas/AIMessage'
            - $ref: '#/components/schemas/FunctionMessage'
      required:
      - input
      - chat_history
    SimpleAgentOutput:
      title: SimpleAgentOutput
      type: object
      properties:
        output:
          title: Output
tags:
- name: agent/simple-react
  description: "\u26A0\uFE0F Using pydantic 2.8.2. OpenAPI docs for `invoke`, `batch`,\
    \ `stream`, `stream_log` endpoints will not be generated. API endpoints and playground\
    \ should work as expected. If you need to see the docs, you can downgrade to pydantic\
    \ 1. For example, `pip install pydantic==1.10.13`See https://github.com/tiangolo/fastapi/issues/10360\
    \ for details."
- name: agent/simple-react/config
  description: Endpoints with a default configuration set by `config_hash` path parameter.
    Used in conjunction with share links generated using the LangServe UI playground.
    The hash is an LZString compressed JSON string.
- name: agent/simple
  description: "\u26A0\uFE0F Using pydantic 2.8.2. OpenAPI docs for `invoke`, `batch`,\
    \ `stream`, `stream_log` endpoints will not be generated. API endpoints and playground\
    \ should work as expected. If you need to see the docs, you can downgrade to pydantic\
    \ 1. For example, `pip install pydantic==1.10.13`See https://github.com/tiangolo/fastapi/issues/10360\
    \ for details."
- name: agent/simple/config
  description: Endpoints with a default configuration set by `config_hash` path parameter.
    Used in conjunction with share links generated using the LangServe UI playground.
    The hash is an LZString compressed JSON string.
