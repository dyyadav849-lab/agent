[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "zion"
version = "0.1.0"
description = ""
authors = ["YJ Ang <yujie.ang@grabtaxi.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
gunicorn = "*"
pydantic = { extras = ["dotenv"], version = "*" }
python-dotenv = "*"
python-json-logger = "*"
typer = "*"
uvicorn = "*"
pydantic-settings = "*"
sse-starlette = "^2.0.0"
httpx-sse = "^0.4.0"
python-gitlab = "^4.4.0"
simpleeval = "^0.9.13"
pyjwt = "^2.8.0"
cryptography = "^42.0.4"
sqlalchemy = "^2.0.27"
pymysql = "^1.1.0"
pytz = "^2024.1"
beautifulsoup4 = "^4.12.3"
markdownify = "^0.11.6"
atlassian-python-api = "^3.41.11"
google-api-python-client = "^2.122.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.0"
lxml = "^5.1.0"
langchainhub = "^0.1.15"
python-dateutil = "^2.9.0.post0"
defusedxml = "^0.7.1"
tzlocal = "^5.2"
pandas = "^2.2.2"
presto-python-client = "^0.8.4"
datadog = "^0.49.1"
ddtrace = "^2.12.1"
langgraph = "0.3.18"
langchain = "^0.3.21"
langchain-openai = "^0.3.9"
datadog-api-client = "2.28.0"
llm-evaluation = {version = "^0.1.26", source = "llm_kit"}
llm-kit = {version = "^0.4.0a4", source = "llm_kit"}
boto3 = "^1.35.55"
aws-assume-role-lib = "^2.10.0"
llm-kit-guardrails = {version = "^0.1.5", source = "llm_kit"}
tiktoken = "0.9.0"
langsmith = "^0.3.45"
langserve = "^0.3.0"
langchain-mcp-adapters = "^0.1.9"
mcp-server-kit = {version = "^0.3.5", source = "mcp_server_kit"}
fastapi = "^0.116.1"
deepeval = "^3.3.9"

[tool.poetry.group.dev.dependencies]
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-cov = "*"
ruff = "0.11.6"
commitizen = "*"
requests-mock = "^1.12.1"

[tool.isort]
# compatible with psf/black
# https://pycqa.github.io/isort/docs/configuration/black_compatibility/
# https://github.com/psf/black/blob/master/docs/compatible_configs.md
profile = "black"
float_to_top = true
src_paths = [".", "zion", "tests"]

[tool.pytest.ini_options]
addopts = ["-ra", "-v", "--strict-markers", "--import-mode=importlib", "--cov"]
minversion = "6.0"

[tool.ruff]
fix = true
src = [".", "zion", "tests"]
extend-include = ["*.ipynb"]
extend-exclude = [
    "scripts/db.py", # ignored because it's only for local development
]
lint.select = ["ALL"]
lint.ignore = [
    "D",      # pydocstyle
    "E501",   # line-too-long
    "COM812", # missing-trailing-comma # conflicts with ruff formatter
    "ISC001", # single-line-implicit-string-concatenation # conflicts with ruff formatter
    "PD011",  # Use `.to_numpy()` instead of `.values`
    "TCH001", # Move third-party import `xxx` into a type-checking block
    "TCH002", # Move third-party import `xxx` into a type-checking block
    "TCH003", # Move third-party import `xxx` into a type-checking block
    "E902",   # future-import boilerplate
    "FA",     # Ignored all FAxxx erros. Missing `from __future__ import annotations`
    "UP007",  # Use X | Y for type annotations
    "UP006",  # Use `list` instead of `List` for type annotation"
    "TD003",  # Missing issue link on the line following this TODO
    "FIX002", # Line contains TODO, consider resolving the issue
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "S101", # assert
]

[[tool.poetry.source]]
name = "llm_kit"
url = "https://gitlab.myteksi.net/api/v4/projects/26831/packages/pypi/simple"
priority = "supplemental"

[[tool.poetry.source]]
name = "mcp_server_kit"
url = "https://gitlab.myteksi.net/api/v4/projects/31027/packages/pypi/simple"
priority = "supplemental"
